public class Player extends Entity{
    private int hp;
    //private int mp;
    private int xp;
    private int level;
    private int gold;
    private int defense;
    private Armor head;
    private Armor body;
    private Armor legs;
    private Weapon weapon;
    private Shield shield;

    public Player() {
        hp = 100;
        xp = 0;
        level = 1;
        gold = 0;
        head = null;
        body = null;
        legs = null;
        weapon = null;
        shield = null;
        defense = 0;
    }

    public Player(int h, int x, int l, int g, 
    Armor he, Armor b, Armor le, Weapon w, Shield s) {
        hp = h;
        xp = x;
        level = l;
        gold = g;
        head = he;
        body = b;
        legs = le;
        weapon = w;
        shield = s;
        defense = he.getDefense() + b.getDefense() + le.getDefense() + s.getDefense();
    }

    public Player getPlayer() {
        return this;
    }

    /*public int getHp() {
        return hp;
    }*/

    /*public void setHp(int h) {
        hp = h;
    }*/

    /*public int getMp() {
        return mp;
    }*/

    /*public void setMp(int m) {
        mp = m;
    }*/

    public int getXp() {
        return xp;
    }

    public void setXp(int x) {
        xp = x;
    }

    /*public int getLevel() {
        return level;
    }*/

    /*public void setLevel(int l) {
        level = l;
    }*/

    public void levelUp() {
        level = level + 1;
    }

    public int getGold() {
        return gold;
    }

    public void setGold(int g) {
        gold = g;
    }

    /*public int getDefense() {
        return defense;
    }*/

    /*public void addDefense(int d) {
        defense = defense + d;
    }*/
    
    /*public void removeDefense(int d) {
        if(defense - d != 0) {
            defense = defense - d;
        } else {
            defense = 0;
        }
    }*/

    /*public Armor getHead() {
        return head;
    }*/

    public void equipArmor(Armor a, Inventory i) {
        if(a.getSlot().equals("Head")) {
            if(head == null) {
                head = a;
                //Inventory i = new Inventory();
                i.getInventory().remove(a);
                addDefense(a.getDefense());
            } else {
                /*Inventory i = new Inventory();
                i.getInventory().add(head);
                removeDefense(head.getDefense());*/
                unequipArmor(head, i);
                head = a;
                addDefense(a.getDefense());
            }
            //TODO: if item in slot, remove and put in inv
            //TODO: remove a from inventory
        } else if(a.getSlot().equals("Body")) {
            if(body == null) {
                body = a;
                //Inventory i = new Inventory();
                i.getInventory().remove(a);
                addDefense(a.getDefense());
            } else {
                /*Inventory i = new Inventory();
                i.getInventory().add(body);
                removeDefense(body.getDefense());*/
                unequipArmor(body, i);
                body = a;
                addDefense(a.getDefense());
            }
            //TODO: if item in slot, remove and put in inv
            //TODO: remove a from inventory
        } else if(a.getSlot().equals("Legs")) {
            if(legs == null) {
                legs = a;
                //Inventory i = new Inventory();
                i.getInventory().remove(a);
                addDefense(a.getDefense());
            } else {
                /*Inventory i = new Inventory();
                i.getInventory().add(legs);
                removeDefense(legs.getDefense());*/
                unequipArmor(legs, i);
                legs = a;
                addDefense(a.getDefense());
            }
            //TODO: if item in slot, remove and put in inv
            //TODO: remove a from inventory
        }
    }

    public void unequipArmor(Armor a, Inventory i) {
        if(a.getSlot().equals("Head")) {
            //Inventory i = new Inventory();
            i.getInventory().add(a);
            head = null;
            removeDefense(a.getDefense());
            //TODO: add a to inventory
        } else if(a.getSlot().equals("Body")) {
            //Inventory i = new Inventory();
            i.getInventory().add(a);
            body = null;
            removeDefense(a.getDefense());
            //TODO: add a to inventory
        } else if(a.getSlot().equals("Legs")) {
            //Inventory i = new Inventory();
            i.getInventory().add(a);
            legs = null;
            removeDefense(a.getDefense());
            //TODO: add a to inventory
        }
    }

    /*public Armor getBody() {
        return body;
    }*/

    /*public Armor getLegs() {
        return legs;
    }*/

    /*public Weapon getWeapon() {
        return weapon;
    }*/

    public void equipWeapon(Weapon w, Inventory i) {
        if(weapon != null) {
            weapon = w;
            i.getInventory().remove(w);
        } else {
            i.getInventory().add(weapon);
            weapon = w;
            i.getInventory().remove(w);
        }
        
    }

    public void unequipWeapon(Weapon w, Inventory i) {
        weapon = null;

    }

    public void equipShield(Shield s, Inventory i) {
        shield = s;
        addDefense(s.getDefense());
    }

    public void unequipShield(Shield s, Inventory i) {

    }





    

}
