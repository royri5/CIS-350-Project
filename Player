public class Player {
    private int hp;
    private int mp;
    private int xp;
    private int level;
    private int gold;
    private int defense;
    private Armor head;
    private Armor body;
    private Armor legs;
    private Weapon weapon;
    private Shield shield;

    public Player(int hp, int mp, int xp, int level, int gold, 
    Armor head, Armor body, Armor legs, Weapon weapon, Shield shield) {

    }

    public int getHp() {
        return hp;
    }

    public void setHp(int h) {
        hp = h;
    }

    public int getMp() {
        return mp;
    }

    public void setMp(int m) {
        mp = m;
    }

    public int getXp() {
        return xp;
    }

    public void setXp(int x) {
        xp = x;
    }

    public int getLevel() {
        return level;
    }

    public void setLevel(int l) {
        level = l;
    }

    public int getGold() {
        return gold;
    }

    public void setGold(int g) {
        gold = g;
    }

    public int getDefense() {
        return defense;
    }

    public void addDefense(int d) {
        defense = defense + d;
    }
    
    public void removeDefense(int d) {
        if(defense - d != 0) {
            defense = defense - d;
        } else {
            defense = 0;
        }
    }

    public Armor getHead() {
        return head;
    }

    public void equipArmor(Armor a) {
        if(a.getSlot().equals("Head")) {
            if(head == null) {
                head = a;
                Inventory i = new Inventory();
                i.getInventory().remove(a);
                addDefense(a.getDefense());
            } else {
                Inventory i = new Inventory();
                i.getInventory().add(head);
                removeDefense(head.getDefense());
                head = a;
                addDefense(a.getDefense());
            }
            //TODO: if item in slot, remove and put in inv
            //TODO: remove a from inventory
        } else if(a.getSlot().equals("Body")) {
            if(body == null) {
                body = a;
                Inventory i = new Inventory();
                i.getInventory().remove(a);
                addDefense(a.getDefense());
            } else {
                Inventory i = new Inventory();
                i.getInventory().add(body);
                removeDefense(body.getDefense());
                body = a;
                addDefense(a.getDefense());
            }
            //TODO: if item in slot, remove and put in inv
            //TODO: remove a from inventory
        } else if(a.getSlot().equals("Legs")) {
            if(legs == null) {
                legs = a;
                Inventory i = new Inventory();
                i.getInventory().remove(a);
                addDefense(a.getDefense());
            } else {
                Inventory i = new Inventory();
                i.getInventory().add(legs);
                removeDefense(legs.getDefense());
                legs = a;
                addDefense(a.getDefense());
            }
            //TODO: if item in slot, remove and put in inv
            //TODO: remove a from inventory
        }
    }

    public void unequipArmor(Armor a) {
        if(a.getSlot().equals("Head")) {
            Inventory i = new Inventory();
            i.getInventory().add(a);
            head = null;
            removeDefense(a.getDefense());
            //TODO: add a to inventory
        } else if(a.getSlot().equals("Body")) {
            Inventory i = new Inventory();
            i.getInventory().add(a);
            body = null;
            removeDefense(a.getDefense());
            //TODO: add a to inventory
        } else if(a.getSlot().equals("Legs")) {
            Inventory i = new Inventory();
            i.getInventory().add(a);
            legs = null;
            removeDefense(a.getDefense());
            //TODO: add a to inventory
        }
    }

    public Armor getBody() {
        return body;
    }

    public Armor getLegs() {
        return legs;
    }

    public Weapon getWeapon() {
        return weapon;
    }

    public void equipWeapon(Weapon w) {
        weapon = w;
    }

    public Shield getShield() {
        return shield;
    }

    public void setShield(Shield s) {
        shield = s;
    }





    

}
